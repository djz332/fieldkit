python module _simulate
    interface
        subroutine random_walk(domain,lx,ly,lz,coord,image,n,steps)
            integer dimension(lx,ly,lz),intent(in) :: domain
            integer, optional,intent(in),check(shape(domain,0)==lx),depend(domain) :: lx=shape(domain,0)
            integer, optional,intent(in),check(shape(domain,1)==ly),depend(domain) :: ly=shape(domain,1)
            integer, optional,intent(in),check(shape(domain,2)==lz),depend(domain) :: lz=shape(domain,2)
            integer dimension(3,n),intent(inout) :: coord
            integer dimension(3,n),intent(inout),depend(n) :: image
            integer, optional,intent(in),check(shape(coord,1)==n),depend(coord) :: n=shape(coord,1)
            integer intent(in) :: steps
        end subroutine random_walk
        subroutine init_random_seed()
        end subroutine init_random_seed
        subroutine msd(traj,runs,n,rsq,window,every)
            real*8 dimension(3,runs,n),intent(in) :: traj
            integer, optional,intent(in),check(shape(traj,1)==runs),depend(traj) :: runs=shape(traj,1)
            integer, optional,intent(in),check(shape(traj,2)==n),depend(traj) :: n=shape(traj,2)
            real*8 dimension(3,window + 1),intent(out),depend(window) :: rsq
            integer intent(in) :: window
            integer intent(in) :: every
        end subroutine msd
        subroutine msd_binned(traj,runs,n,axis,bins,lo,hi,rsq,window,every)
            real*8 dimension(3,runs,n),intent(in) :: traj
            integer, optional,intent(in),check(shape(traj,1)==runs),depend(traj) :: runs=shape(traj,1)
            integer, optional,intent(in),check(shape(traj,2)==n),depend(traj) :: n=shape(traj,2)
            integer intent(in) :: axis
            integer intent(in) :: bins
            real*8 intent(in) :: lo
            real*8 intent(in) :: hi
            real*8 dimension(3,window + 1,bins),intent(out),depend(window,bins) :: rsq
            integer intent(in) :: window
            integer intent(in) :: every
        end subroutine msd_binned
    end interface
end python module _simulate
